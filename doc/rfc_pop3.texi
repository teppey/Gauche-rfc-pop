@c ----------------------------------------------------------------------
@node POP3, Library modules - Utilities
@section @code{rfc.pop3} - POP3 client module

@deftp {Module} rfc.pop3
@mdindex rfc.pop3
@c EN
This module provides a client API for POP3, defined in RFC1939 ``Post Office Protocol version 3''
@c JP
このモジュールはRFC1939で定義されているPOP3プロトコル(Post Office Protocol - Version 3)のクライアントAPIを提供します。
@c COMMON
@end deftp

@deftp {Condition Type} <pop3-error>
@clindex pop3-error
@c EN
@c JP
pop3-関連のコンディションのベースクラス。@code{<error>}を継承しています。
@c COMMON
@end deftp

@deftp {Condition Type} <pop3-timeout-error>
@clindex pop3-timeout-error
@c EN
@c JP
このコンディションはサーバーからの応答が一定時間なかった場合に発生します。
@code{<pop3-error>}を継承しています。
@c COMMON
@end deftp

@deftp {Condition Type} <pop3-authentication-error>
@clindex pop3-authentication-error
@c EN
@c JP
サーバーでの認証が失敗したときにこのコンディションが投げられます。
@code{<pop3-error>}を継承しています。
@c COMMON
@end deftp

@deftp {Condition Type} <pop3-bad-response-error>
@clindex pop3-bad-response-error
@c EN
@c JP
サーバーからエラーレスポンスを受け取った場合に発生するコンディションです。
レスポンスはmessageスロットに格納さrています。
@code{<pop3-error>}を継承しています。
@c COMMON
@end deftp

@deftp {Class} <pop3-connection>
@clindex pop3-connection
@c EN
@c JP
POP3サーバーへの接続を保持するオブジェクト。以下の公開スロットがあります。
@c COMMON

@defivar {<pop3-connection>} host
@c EN
@c JP
POP3サーバーのホスト名。
@c COMMON
@end defivar

@defivar {<pop3-connection>} port
@c EN
@c JP
POP3サーバーのポート番号。デフォルトでは110番です。
@c COMMON
@end defivar

@defivar {<pop3-connection>} timeout
@c EN
@c JP
接続時に待つ最大秒数。この秒数が経過しても接続できなければ@code{<pop3-timeout-error>}コンディションが発生します。
デフォルトでは30秒に設定されています。
@c COMMON
@end defivar
@end deftp

@defun call-with-pop3-connection host username password proc &keyword apop
@c EN
@c JP
POP3サーバーに接続して認証を行い、@code{<pop3-connection>}オブジェクトとともに
@var{proc}を呼びます。@var{host}には接続するサーバーを指定します。@code{@var{hostname}:@var{port}}と
いう形式でポート番号を指定することができます。

@var{username}、@var{password}は認証に使用するユーザー名とパスワードです。キー
ワード引数@var{apop}に真の値が渡されるとAPOP方式で認証を行います。

@var{host}への接続が確率したら、@var{proc}が@code{<pop3-connection>}オブジェ
クトを引数にして呼ばれます。@var{proc}から返ったときこのコネクションはクロー
ズされ、@var{proc}の戻り値が@code{call-with-pop3-connection}から返されます。

この手続きを使用してメールをローカルファイルに保存する例を示します。

@c COMMON
@example
(define pop-host "pop.example.com")
(define pop-user "username")
(define pop-pass "password")

(call-with-pop3-connection pop-host pop-user pop-pass
  (lambda (conn)
    (for-each (lambda (pair)
                (let1 num (car pair)
                  (with-output-to-file #`"./inbox/,num"
                    (lambda () (pop3-retr conn num)))
                  (pop3-dele conn num)))
              (pop3-list conn))))
@end example
@end defun

@deffn {Method} pop3-connect (conn <pop3-connection>)
@c EN
@c JP
リモートサーバーに接続し、レスポンス文字列を返します。
@c COMMON
@end deffn

@deffn {Method} pop3-quit (conn <pop3-connection>)
@c EN
@c JP
QUITコマンドをリモートサーバーに送り、コネクションを切断します。
@c COMMON
@end deffn

@defun ftp-passive? conn
@c EN
Returns true iff ftp connection uses passive data retrieval.
@c JP
指定したFTPコネクションがパッシブモードである場合でその場合に限り真を
返します。
@c COMMON
@end defun

@c EN
@c JP
以下のメソッドはPOP3プロトコルのコマンドを実装します。多くの場合サーバーから
のレスポンスを文字列で返します。
@c COMMON

@deffn {Method} pop3-user (conn <pop3-connection>) username
@c EN
@c JP
USERコマンドを@var{username}とともにサーバーに送り、レスポンス文字列を返します。
@c COMMON
@end deffn

@deffn {Method} pop3-pass (conn <pop3-connection>) password
@c EN
@c JP
PASSコマンドを@var{password}とともにサーバーに送り、レスポンス文字列を返します。
@c COMMON
@end deffn

@deffn {Method} pop3-login (conn <pop3-connection>) username password
@c EN
@c JP
@code{pop3-user}と@code{pop3-pass}を使用してサーバーにログインします。
ログインに失敗すると@code{<pop3-authentication-error>}コンディションが発生します。
@c COMMON
@end deffn

@deffn {Method} pop3-apop (conn <pop3-connection>) username password
@c EN
@c JP
APOPコマンドを使用してサーバーにログインします。
ログインに失敗すると@code{<pop3-authentication-error>}コンディションが発生します。
@c COMMON
@end deffn

@deffn {Method} pop3-stat (conn <pop3-connection>)
@c EN
@c JP
サーバ上のメール数とそれらの合計サイズの2つの値を返します。
@c COMMON
@end deffn

@defun ftp-login host :key passive port username password account log-drain
@c EN
Connects to the ftp server specified by @var{host}, authenticate the user,
and returns a newly created @code{<ftp-connection>} instance.
This procedure is called implicitly when you use
@code{call-with-ftp-connection}.  The semantics of
the @var{host} argument and the keyword arguments are
the same as @code{call-with-ftp-connection}.
@c JP
@var{host}で指定されたFTPサーバーに接続し、ユーザー認証をすませ、新し
く生成した@code{<ftp-connection>}のインスタンスを返します。この手続き
は@code{call-with-ftp-connection}を使ったときに暗黙の内に呼ばれます。
@var{host}引数およびキーワード引数のセマンティクスは
@code{call-with-ftp-connection}と同じです。
@c COMMON
@end defun

@defun ftp-quit conn
@c EN
Sends ftp @code{QUIT} command to the connection @var{conn} and
shutdown the connection.
This procedure is called implicitly when you use
@code{call-with-ftp-connection}.
@c JP
FTPの@code{QUIT}コマンドをコネクション@var{conn}に送り、コネクションを
シャットダウンします。この手続きは@code{call-with-ftp-connection}を使っ
たときに暗黙の内に呼ばれます。
@c COMMON

@c EN
Once a connection is shut down, you cannot communicate through
this connection.
@c JP
いったんシャットダウンしたコネクションをつかっての通信はできません。
@c COMMON
@end defun

@defun ftp-chdir conn dirname
@c EN
Changes the remote directory to @var{dirname}.
@c JP
リモートディレクトリを@var{dirname}に変更します。
@c COMMON
@end defun

@defun ftp-remove conn path
@c EN
Removes the remote file named by @var{path}.
@c JP
@var{path}で指定したリモートファイルを削除します。
@c COMMON
@end defun

@defun ftp-help conn :optional option @dots{}
@c EN
Sends ftp @code{HELP} commands.  @var{Option}s must be strings,
and will be passed to the @code{HELP} command arguments.
@c JP
FTPコマンド@code{HELP}を送ります。@var{Option}は文字列でなければなりま
せん。これは@code{HELP}コマンドの引数にわたされます。
@c COMMON
@end defun

@defun ftp-mkdir conn dirname
@c EN
Creates a directory @var{dirname}.  Returns the created directory
name.
@c JP
ディレクトリ@var{dirname}を作成します。作成されたディレクトリ名が返り
ます。
@c COMMON
@end defun

@defun ftp-current-directory conn
@c EN
Returns the current remote directory.
@c JP
現在のリモートディレクトリを返します。
@c COMMON
@end defun

@defun ftp-site conn arg
@c EN
Sends ftp @code{SITE} command with the argument @var{arg}.
The @code{SITE} command's semantics depends on the server.
Returns the server reply.
@c JP
FTPコマンド@code{SITE}を引数@var{arg}とともに送ります。@code{SITE}コマ
ンドのセマンティクスはサーバーに依存します。返り値はサーバーのリプライ
です。
@c COMMON
@end defun

@defun ftp-rmdir conn dirname
@c EN
Removes remote directory specified by @var{dirname}.
Returns the server reply.
@c JP
@var{dirname}で指定したリモートディレクトリを削除します。返り値はサー
バーのリプライです。
@c COMMON
@end defun

@defun ftp-stat conn :optional pathname
@c EN
Sends ftp @code{STAT} command to the server.
RFC959 defines several different semantics of this command.
See RFC959 for the details.
Returns the server reply.
@c JP
FTPコマンド@code{STAT}をサーバーに送信します。
RFC959ではこのコマンドのセマンティクスをいくつか定義しています。詳細は
RFC959を見てください。返り値はサーバーのリプライです。
@c COMMON
@end defun

@defun ftp-system conn
@c EN
Queries the server's operating system by ftp @code{SYST} command.
Returns the server reply without status code.
@c JP
FTPコマンド@code{SYST}をつかってサーバーのオペレーティングシステムを問
合せます。返り値はステータスコードを含まないサーバーのリプライです。
@c COMMON

@example
(call-with-ftp-connection "localhost" ftp-system)
  @result{} "UNIX Type: L8"
@end example
@end defun

@defun ftp-size conn path
@c EN
Queries the size of the remote file specified by @var{path}.
Returns the integer value.

Note: The size may differ whether the connection is in ascii mode
or binary mode; furthermore, some ftp server may returns the value
only if the connection is in binary mode.  Make sure you have
desired transfer type in the connection.
@c JP
@var{path}で指定したリモートファイルのサイズを問合せます。
整数値が返ります。

註：コネクションがasciiモードかbinaryモードかによって、返されるサイズは
異なるかもしれません。ftpサーバによっては、binaryモードでしか
sizeリクエストに答えないものもあります。この関数を呼ぶ際には、
コネクションに望みのtransfer typeがセットされているようにしてください。
@c COMMON
@end defun

@defun ftp-mdtm conn path
@c EN
Queries the modification time of the remote file specified by @var{path}.
This function returns the server's reply as is, including the status
code.  Use @code{ftp-mtime} below to obtain a parsed result.
@c JP
@var{path}で指定したリモートファイルの更新時刻を問合せます。この関数は
サーバーからのリプライをステータスコードも含めそのまま返します。解析済
みの結果が欲しいときは後述の@code{ftp-mtime}を使ってください。
@c COMMON
@end defun

@defun ftp-mtime conn path :optional local-time?
@c EN
Queries the modification time of the remote file specified by @var{path},
and returns the result in a @code{<date>} object 
(@xref{Time data types and procedures}).
If a true value is given to @code{local-time?}, the returned date is
in local time.  Otherwise, the returned date is in UTC.
@c JP
@var{path}で指定したリモートファイルの更新日時を問合せます。結果は
@code{<date>}オブジェクト(@ref{Time data types and procedures}参照)で
返ります。@code{local-time?}が真値に設定されている場合、日付はローカル
時刻で返ります。そうでない場合は日付はUTCです。
@c COMMON
@end defun

@defun ftp-noop conn
@c EN
Sends ftp @code{NOOP} command and returns the server's reply.
@c JP
FTPコマンド@code{NOOP}を送り、サーバーからのリプライを返します。
@c COMMON
@end defun

@defun ftp-list conn :optional path
@c EN
Returns the information about the files within the remote file 
or directory specified by @var{path}, or the current remote directory,
much like @code{ls(1)} format.  Returns a list of strings, where
each string is for each line of the server's reply.  The exact
format depends on the server.
@c JP
@var{path}で指定されたリモートディレクトリあるいはリモートファイル内の
ファイルに関する情報を返します。@var{path}指定がない場合は現在のリモー
トディレクトリで、結果のフォーマットは@code{ls(1)}のフォーマットと非常
によく似ています。文字列のリストが返り、それぞれの文字列はサーバーのリ
プライの行に対応します。正確なフォーマットについてはサーバーに依存しま
す。
@c CoMMON
@end defun

@defun ftp-name-list conn :optional path
@defunx ftp-ls conn :optional path
@c EN
Return the list of names in the specfied @var{path}, or the current
remote directory, without any other information.  @code{ftp-ls}
is just an alias of @code{ftp-name-list} for the convenience.
@c JP
@var{path}で指定したパスもしくは現在のリモートディレクトリにあるファイ
ル名リストを返します。ただし、他の情報は含みません。@code{ftp-ls}は
@code{ftp-name-list}の別名です。便利なので定義してあります。
@c COMMON

@c EN
Note that the server may return an error if there's no files
in the remote directory.
@c JP
リモートディレクトリにファイルが含まれていないときにはサーバーはエラー
を返すことがあることに注意してください。
@c COMMON
@end defun

@defun ftp-get conn path :key sink flusher
@c EN
Retrieves a remote file @var{path}.  The retrieved data is
sent to an output port given to @var{sink}.  Once all the data
is retrieved, a procedure given to @var{flusher} is called
with the port @var{sink} as an argument, and its return value(s)
is/are returned from @code{ftp-get}.  
@c JP
リモートファイル@var{path}を検索します。検索データは@var{sink}で与えら
れた出力ポートに送られます。すべてのデータが検索されたあと、
@var{flusher}で与えられた手続きをポート@var{sink}を引数として呼びます。
返り値は@code{ftp-get}から返されたものです。
@c COMMON

@c EN
The default values of @var{sink} and @var{flusher} are
a newly created string port and @code{get-output-string}, respectively.
That is, @code{ftp-get} returns the retrieved data as a string
by default.
You don't want this behavior if the retrieved file is huge.
@c JP
@var{sink}および@var{flusher}のデフォルト値はそれぞれ、新しく作成され
た文字列ポートと@code{get-output-string}です。すなわち、@code{ftp-get}
はデフォルトでは検索データを文字列として返します。巨大なファイルの場合
このデフォルトの挙動ではありがたくありません。
@c COMMON
@end defun

@defun ftp-put conn from-file :optional to-file
@c EN
Sends the local file specified by @var{from-file} to the remote
server as the name specified by @var{to-file}.  If @var{to-file}
is omitted, the basename of @var{from-file} is used.
Returns the server response.
@c JP
@var{from-file}で指定したローカルファイルを@var{to-file}で指定した名前
でリモートサーバーに送信します。@var{to-file}が省略された場合にはベー
ス名として@var{from-file}が使われます。返り値はサーバーのレスポンスで
す。
@c COMMON
@end defun

@defun ftp-put-unique conn from-file
@c EN
Sends the local file specified by @var{from-file} to the 
remote server.  The remote side filename is guaranteed to 
be unique.  Returns two values---the final server response,
and the remote file name.  The second value can be @code{#f}
if the remote host doesn't support RFC1123 (which must be rare).
@c JP
@var{from-file}で指定したローカルファイルをリモートサーバーへ送信しま
す。リモート側のファイル名重複しないことを保証します。返り値は2つで、
最終的なリモートサーバーからのレスポンスとリモートファイル名です。2つ
めの値は、リモートサーバーがRFC1123をサポートしていない(ほとんどない)
場合に@code{#f}になります。
@c COMMON
@end defun

@defun ftp-rename conn from-name to-name
@c EN
Renames the remote file specified by @var{from-name} to the
name @var{to-name}.  Returns the final response of the server.
@c JP
@var{from-name}で指定したリモートファイル名を@var{to-name}に変更する。
返り値は最終的なサーバーのレスポンスです。
@c COMMON
@end defun

